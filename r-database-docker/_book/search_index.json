[
["miniconda-integration.html", "Chapter 3 Miniconda Integration 3.1 Why do this? 3.2 Install the installr package. 3.3 Install Miniconda3 3.4 Install reticulate", " Chapter 3 Miniconda Integration 3.1 Why do this? A number of R deep learning packages use Python under the hood. RStudio’s keras package, for example, works this way. Also, the R docker package works by calling a Python Docker API library from R via reticulate. And, of course, you’ll probably end up receiving a Jupyter notebook or two even if you’re a die-hard RStudio user. Miniconda is a bare-bones minimalist version of the rather large Anaconda environment. If you’re doing Python data science, you probably have the full Anaconda installed already. But for R programmers, we only want enough Python for the R packages that use Python libraries to work. So … here we go! 3.2 Install the installr package. There’s an R package called installr that can run a Windows installer. if (!require(installr)) install.packages(&quot;installr&quot;) library(installr) 3.3 Install Miniconda3 The following R code chunk will install `Miniconda3. install.URL(&quot;https://repo.continuum.io/miniconda/Miniconda3-latest-Windows-x86_64.exe&quot;) Here are the screenshots you’ll see: Click Next. Click I Agree. Just Me, Next. Choose the install location. The default is your home directory, which on my laptop is a small SSD. So I changed it to the D drive, which is a terabyte spinning disk. After you’ve set the install location, click Next. Clear both check boxes and click Install. Click Next. Clear the check boxes and click Finish. 3.4 Install reticulate if (!require(reticulate)) install.packages(&quot;reticulate&quot;) library(reticulate) Did it work? py_discover_config() "]
]
